package com.team_clicker.idlefarmer;import android.content.DialogInterface;import android.os.Handler;import android.os.Message;import android.support.v7.app.AlertDialog;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.ListView;import android.widget.ProgressBar;import android.widget.TextView;import com.team_clicker.idlefarmer.adapter.CerealAdapter;import com.team_clicker.idlefarmer.model.Cereal;import com.team_clicker.idlefarmer.runnable.CerealRun;import com.team_clicker.idlefarmer.runnable.Counter;import com.team_clicker.idlefarmer.service.GameService;import com.team_clicker.idlefarmer.view.CerealView;import java.util.ArrayList;import java.util.Calendar;import java.util.List;import java.util.Timer;/** * An example full-screen activity that shows and hides the system UI (i.e. * status bar and navigation/system bar) with user interaction. */public class MainActivity extends AppCompatActivity {    public final static int MESSAGE_MONEY = 1;    public final static int MESSAGE_PB = 2;    private List<Timer> timers = new ArrayList<>();    private GameService service = new GameService(this);    private boolean firstTime = true;    private List<CerealView> cerealsView;    private Counter counter;    private Thread threadCounter;    private TextView tvMoney;    private ListView listViewCereals;    private Button buttonLevel;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        tvMoney = (TextView) findViewById(R.id.valueMoney);        listViewCereals = (ListView)findViewById(R.id.cereals);        listViewCereals.setOnItemClickListener(cerealClick);        buttonLevel = (Button) findViewById(R.id.addLevel);        buttonLevel.setOnClickListener(buttonLevelClick);        cerealsView = new ArrayList<>();        counter = new Counter(handler);        threadCounter = new Thread(counter);        threadCounter.start();    }    @Override    protected void onPause() {        super.onPause();        Calendar now = Calendar.getInstance();        service.getGame().setDbtIdle(now.getTimeInMillis());        for(Timer timer : timers){            timer.cancel();        }        service.saveGame();    }    @Override    protected void onResume() {        super.onResume();        service.init();        if(service.getGame().getDbtIdle() > 0){            Calendar now = Calendar.getInstance();            long diffSeconds = (now.getTimeInMillis() - service.getGame().getDbtIdle()) / 1000;            double moneyEarns = 0;            for(Cereal cereal : service.getGame().getCereals()){                if(cereal.getLevel() > 0){                    long nbCompleted = diffSeconds / cereal.getGrowthTime();                    moneyEarns += (cereal.getCurrentYield() * nbCompleted) / 2;                    System.out.println(nbCompleted);                    System.out.println(moneyEarns);                }            }            dialog(moneyEarns);            service.getGame().addMoney(moneyEarns);        }        setTextMoneyTV(service.getGame().getMoney());        for(Cereal cereal : service.getGame().getCereals()){            if(cereal.getLevel() > 0){                Timer timer = new Timer();                timer.schedule(new CerealRun(cereal, service.getGame(), handler), 0, cereal.getGrowthTime()*1000);                timers.add(timer);            }        }        List<Cereal> cerealsList = service.getGame().getCereals();        List<CerealView> cerealViewList = new ArrayList<>();        for(Cereal cereal : cerealsList){            cerealViewList.add(new CerealView(cereal, cereal.getCurrentPrice()));        }        CerealAdapter adapter = new CerealAdapter(getApplicationContext(), cerealViewList);        listViewCereals.setAdapter(adapter);    }    private AdapterView.OnItemClickListener cerealClick = new AdapterView.OnItemClickListener() {        @Override        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {            CerealView entry = (CerealView)parent.getAdapter().getItem(position);            if(service.getGame().getMoney() >= entry.getPriceDisplayed()){                int level = 1;                if(buttonLevel.getText().equals("+ 10")){                    level = 10;                } else if(buttonLevel.getText().equals("+ 25")){                    level = 25;                }                entry.getCereal().setLevel(entry.getCereal().getLevel() + level);                if(entry.getCereal().getLevel() == 1){                    Timer timer = new Timer();                    timer.schedule(new CerealRun(entry.getCereal(), service.getGame(), handler), 0, entry.getCereal().getGrowthTime()*1000);                    timers.add(timer);                }                service.getGame().removeMoney(entry.getPriceDisplayed());                service.updateCereal(entry.getCereal());                entry.calculateNewPriceToDisplay(level);                setTextMoneyTV(service.getGame().getMoney());                listViewCereals.invalidateViews();                listViewCereals.refreshDrawableState();            }        }    };    private View.OnClickListener buttonLevelClick = new View.OnClickListener() {        @Override        public void onClick(View v) {            int level = 1;            if(buttonLevel.getText().equals("+ 1")){                buttonLevel.setText("+ 10");                level = 10;            } else if(buttonLevel.getText().equals("+ 10")){                buttonLevel.setText("+ 25");                level = 25;            } else if(buttonLevel.getText().equals("+ 25")){                buttonLevel.setText("+ 1");                level = 1;            }            for (int i = 0; i < listViewCereals.getAdapter().getCount(); i++){                ((CerealView)listViewCereals.getAdapter().getItem(i)).calculateNewPriceToDisplay(level);            }            listViewCereals.invalidateViews();            listViewCereals.refreshDrawableState();        }    };    private void dialog(double money){        String moneyString = "";        if(money > 999999){            moneyString = String.format("%.2e",money) + "$";        } else {            moneyString = String.format("%.2f",money) + "$";        }        AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this);        dialog.setCancelable(false);        dialog.setTitle("Argent Gagn√©");        dialog.setMessage("Vous avez gagne " + moneyString);        dialog.setPositiveButton("OK", new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialog, int id) {            }        });        AlertDialog alert = dialog.create();        alert.show();    }    private Handler handler = new Handler(){        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            if(msg.what == MESSAGE_MONEY){                double money = (double)msg.obj;                setTextMoneyTV(money);            } else if(msg.what == MESSAGE_PB){                if(firstTime) {                    firstTime = false;                    cerealsView.clear();                    for (int i = 0; i < listViewCereals.getCount(); i++) {                        CerealView c = (CerealView) listViewCereals.getAdapter().getItem(i);                        if(c.getProgressBar() != null)                        {                            c.getProgressBar().setMax(c.getCereal().getGrowthTime()*24);                            cerealsView.add(c);                        }                        else{                            firstTime =true;                        }                    }                }                if(!firstTime){                    updateProgressBar();                }            }        }    };    private void setTextMoneyTV(double money){        if(money > 999999){            tvMoney.setText(String.format("%.2e",money) + "$");        } else {            tvMoney.setText(String.format("%.2f",money) + "$");        }    }    private void updateProgressBar(){        for(CerealView cerealView: cerealsView){            if(cerealView.getCereal().getLevel() > 0){                cerealView.getProgressBar().setProgress(cerealView.getProgressBar().getProgress()+1);            }            if(cerealView.getProgressBar().getProgress() >= cerealView.getProgressBar().getMax()){                cerealView.getProgressBar().setProgress(0);            }        }    }}